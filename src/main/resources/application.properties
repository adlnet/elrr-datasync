server.port=8809

spring.datasource.url=jdbc:postgresql://${PGHOST}:${PGPORT}/${PG_DATABASE}
spring.datasource.username=${PG_RW_USER}
spring.datasource.password=${PG_RW_PASSWORD}
spring.sql.init.platform=postgresql
spring.jpa.properties.hibernate.default_schema=${PG_SCHEMA:datasync_schema}
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false

logging.level.org.springframework.security=INFO
logging.level.org.springframework=INFO
logging.level.com.deloitte=INFO
logging.level.root=INFO
logging.level.org.apache.kafka.clients.admin=ERROR

#lrsservice.url=http://elrr-external-services
lrsservice.url=${EXTERNAL_SERVICES_URL:http://elrr-external-services}
lrsservice.cookie=

### Runs every minute
cronExpression=${RUN_FREQUENCY:0 0/1 * * * *}

### Runs every 60 minutes
purgeCronExpression=${AUDIT_PURGE_FREQUENCY:0 */60 * * * *}
purgeDays=${AUDIT_PURGE_RETENTION:10}

lrs.samlurl=https://mocksaml.com/api/saml/metadata
lrs.samlid=samltest

brokerUrl=${BROKER_HOST:elrr-kafka}:${BROKER_PORT:9092}

kafka.topic=${BROKER_TOPIC:datasync-statements}
kafka.dead.letter.topic=${BROKER_DLQ:datasync-statements-dlq}
kafka.groupId=${BROKER_GROUPID:elrr-consumer-group}
kafka.partitions=${BROKER_PARTITIONS:6}
kafka.replicas=${BROKER_REPLICAS:1}
kafka.batch.size=32768
kafka.linger=20

###server.use-forward-headers=true
server.forward-headers-strategy=NATIVE

spring.jpa.open-in-view = false

spring.http.multipart.enabled=true
spring.http.multipart.max-file-size=2MB
spring.http.multipart.max-request-size=2MB

json.max.size.limit=2000000

# Editing switches
# Enable = true
# Disable = false
# Use true p1
# Use false for Deloitte sandbox
check.http.header=true
check.media.type.json=true

initial.date=2000-12-01T00:00:00Z

max.retries=3
max.statements=500
